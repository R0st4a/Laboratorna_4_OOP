openapi: 3.0.0
info:
  version: 1.0.0
  title: 'Online Lections'
  description: 'An API that allows users to create Online Lections'
  termsOfService: http://Online_Lections.com/terms-of-use
  contact:
    name: Rostyslav
    url: Online_Lections.com
    email: rost.stas3108@gmail.com
  license:
    name: Online_Lections
    url: hrrp://lisense.foo.com
    
    
servers: 
  - url: http://dev.foo.com/v1
    description: Dev Server
  
  - url: http://prod.foo.com/v1
    description: Prod Server
    
tags:
  - name: Course
  - name: User


paths:
  /course:
    get:
      tags:
        - Course
      summary: View all courses
      responses:
        200:
          description: Successful pull of Courses info
          content:
            application/json:
               schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/course'
        400:
          description: Error occured
      security:
        - Online_Lection_auth:
            - 'read:lection'
            
    put:
      tags:
        - Course
      summary: Update an course
      parameters:
        - in: query
          name: id_course
          description: The ID of course
          schema:
            type: integer
            example: 20
        - in: query
          name: id_student
          description: The ID of student you want to add or deleat
          schema:
            type: integer
            example: 20
        - in: query
          name: job
          description: Job to be made with studentom
          schema:
            type: string
            example: delete
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/course'
        400:
          description: Wrong ID
      security:
        - Online_Lection_auth:
            - 'Change:lection'
            
    post:
      tags:
        - Course
      summary: Create a new Course in the database
      description: Create a new Course in the database
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/course'
                  
      responses:
        200:
          description: Succssfully crated a new Course
          content:
            application/json:
               schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/course'
                    
      security:
        - Online_Lection_auth:
            - 'Change:lection'
  /course/{id}:
    get:
      tags:
        - Course
      summary: Info about course
      description: Information about Course
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of course
          schema:
            type: integer
            example: 20
      security:
        - Online_Lection_auth:
          - 'Change:lection'
          - 'read:lection'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/course'
        400:
          description: Wrong ID
          
          
    delete:
      tags:
        - Course
      summary: Delete cource
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 5
      responses:
        200:
          description: Successful deleted
        400:
          description: Wrong ID
      security:
        - Online_Lection_auth:
            - 'Change:lection'
            
  /user:
    post:
      tags:
        - User
      summary: Create User
      description: This can only be done by the User.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        description: Created User object
        required: true
      responses:
        default:
          description: successful operation
          content:
            application/json:
               schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/user'
                    
  /user/{id}:
    get:
      tags:
        - User
      summary: Get info about specific user
      parameters:
          - in: path 
            name: id
            description: The id of specific user 
            required: true
            schema:
              type: integer
              example: 5
      responses:
        200:
          description: successful operation
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/user'
        400:
          description: Wrong ID
          
  /user/login:
    get:
      tags:
        - User
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/user'
  /user/logout:
    get:
        tags:
          - User
        description: logs out teacher
        summary: Logs out user
        responses:
          default:
            description: successful operation
        security:
          - Online_Lection_auth:
            - 'Change:lection'
            
components:
  schemas:
  
    user:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 228
        firstName:
          type: string
          example: Medved
        lastName:
          type: string
          example: Kapatuch
        email:
          type: string
          example: uchilka@gmail.com
        password:
          type: string
          example: 88005553535
        status:
          type: string
          example: teacher
    
    course:
      description: Model contain course info
      properties:
        id:
          type: integer
          example: 4
                      
        course name:
          type: string
          example: Math
                    
        course title:
          type: string
          example: Learning basic Math
        
        id_of_Owner:
          type: integer
          example: 228
          
        id_of_Children:
          type: array
          maxLength: 5
          example: 666 , 222, 111
          
  securitySchemes:
    Online_Lection_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http'
          scopes:
            'Change:lection': modify lections in your account
            'read:lection': read lections that was allowed